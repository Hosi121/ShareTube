openapi: 3.0.0
info:
  title: デプロ課題
  version: 1.0.0
paths:
  /api/register:
    post:
      summary: "ユーザー登録"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: "User registered successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: "Email already exists"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/login:
    post:
      summary: "ユーザーログイン"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: "Login successful"
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  message:
                    type: string
        "400":
          description: "Invalid email or password"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/logout:
    post:
      summary: "ユーザーログアウト"
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Logout successful"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/users/{userId}/settings:
    get:
      summary: "ユーザー設定の取得"
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "User settings"
          content:
            application/json:
              schema:
                type: object
                properties:
                  settings:
                    type: object
        "404":
          description: "User not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/videos/upload:
    post:
      summary: "動画アップロード"
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: "Video uploaded successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  videoId:
                    type: string
        "400":
          description: "File upload failed"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/videos/{videoId}:
    get:
      summary: "動画再生"
      parameters:
        - in: path
          name: videoId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Video details"
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  description:
                    type: string
                  tags:
                    type: array
                    items:
                      type: string
                  videoUrl:
                    type: string
                  likes:
                    type: integer
                  comments:
                    type: array
                    items:
                      type: object
                      properties:
                        user:
                          type: string
                        comment:
                          type: string
                        timestamp:
                          type: string
                          format: date-time
        "404":
          description: "Video not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/videos/{videoId}/comments:
    post:
      summary: "コメント投稿"
      parameters:
        - in: path
          name: videoId
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
      responses:
        "200":
          description: "Comment added successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: "Failed to add comment"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    get:
      summary: "コメント表示"
      parameters:
        - in: path
          name: videoId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "List of comments"
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      type: object
                      properties:
                        user:
                          type: string
                        comment:
                          type: string
                        timestamp:
                          type: string
                          format: date-time
        "400":
          description: "Failed to fetch comments"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/videos/{videoId}/like:
    post:
      summary: "いいね"
      parameters:
        - in: path
          name: videoId
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Video liked successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  likes:
                    type: integer
        "400":
          description: "Failed to like the video"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/videos/{videoId}/likes:
    get:
      summary: "評価表示"
      parameters:
        - in: path
          name: videoId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Number of likes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  likes:
                    type: integer
        "400":
          description: "Failed to fetch likes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/users/{userId}:
    get:
      summary: "プロフィール表示"
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "User profile"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  email:
                    type: string
                  videos:
                    type: array
                    items:
                      type: object
                      properties:
                        videoId:
                          type: string
                        title:
                          type: string
                        description:
                          type: string
        "404":
          description: "User not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    put:
      summary: "プロフィール編集"
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
      responses:
        "200":
          description: "Profile updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: "Failed to update profile"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/videos/search:
    get:
      summary: "動画検索"
      parameters:
        - in: query
          name: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Search results"
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        videoId:
                          type: string
                        title:
                          type: string
                        description:
                          type: string
                        tags:
                          type: array
                          items:
                            type: string
        "400":
          description: "Failed to search videos"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

